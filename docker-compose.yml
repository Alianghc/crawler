version: "3.7"

services:
  redis:
    image: redis
    networks:
      - spider
    volumes:
      - redis_data:/data
    command: --appendonly yes --requirepass "123456"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      placement:
        constraints:
          - "node.hostname == spider-1"
    labels:
      traefik.docker.network: spider
      traefik.port: 6379

  mongo:
    image: mongo
    networks:
      - spider
    volumes:
      - mongo_data:/data/db
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      placement:
        constraints:
          - "node.hostname == spider-1"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    labels:
      traefik.docker.network: spider
      traefik.port: 27017

  scrapyd:
    image: plrom.niracler.com:5009/scrapyd
    networks:
      - spider
#    volumes:
#      - mongo_data:/data/db
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      placement:
        constraints:
          - "node.hostname == spider-1"
#    command: "sh logparser && scrapyd"
    labels:
      traefik.docker.network: spider
      traefik.port: 6800

#  crawler2:
#    image: inner.registry:5000/spider
#    networks:
#      - spider
#    deploy:
#      mode: replicated
#      replicas: 3
#      restart_policy:
#        condition: on-failure
#      endpoint_mode: dnsrr
#      placement:
#        constraints:
#          - "node.labels.spider-role == crawler2"

volumes:
  redis_data:
  mongo_data:

networks:
  spider:
    external: true
    name: spider
